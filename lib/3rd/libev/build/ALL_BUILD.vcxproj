<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{38D0FC91-08EC-3572-B4A5-7FEFE933958D}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>E:\github\fish\lib\3rd\libev;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>E:\github\fish\lib\3rd\libev;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>E:\github\fish\lib\3rd\libev;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>E:\github\fish\lib\3rd\libev;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\github\fish\lib\3rd\libev\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule E:/github/fish/lib/3rd/libev/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
E:\github\cmake-3.13.2-win64-x64\bin\cmake.exe -SE:/github/fish/lib/3rd/libev -BE:/github/fish/lib/3rd/libev/build --check-stamp-file E:/github/fish/lib/3rd/libev/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:/github/fish/lib/3rd/libev/CMakeLists.txt;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeRCInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckIncludeFile.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckLibraryExists.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckSymbolExists.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindPackageMessage.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindThreads.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;E:\github\fish\lib\3rd\libev\CMakeLists.txt;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeCCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeSystem.cmake;E:\github\fish\lib\3rd\libev\internal_utils.cmake;E:\github\fish\lib\3rd\libev\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">E:\github\fish\lib\3rd\libev\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule E:/github/fish/lib/3rd/libev/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
E:\github\cmake-3.13.2-win64-x64\bin\cmake.exe -SE:/github/fish/lib/3rd/libev -BE:/github/fish/lib/3rd/libev/build --check-stamp-file E:/github/fish/lib/3rd/libev/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:/github/fish/lib/3rd/libev/CMakeLists.txt;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeRCInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckIncludeFile.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckLibraryExists.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckSymbolExists.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindPackageMessage.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindThreads.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;E:\github\fish\lib\3rd\libev\CMakeLists.txt;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeCCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeSystem.cmake;E:\github\fish\lib\3rd\libev\internal_utils.cmake;E:\github\fish\lib\3rd\libev\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">E:\github\fish\lib\3rd\libev\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule E:/github/fish/lib/3rd/libev/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
E:\github\cmake-3.13.2-win64-x64\bin\cmake.exe -SE:/github/fish/lib/3rd/libev -BE:/github/fish/lib/3rd/libev/build --check-stamp-file E:/github/fish/lib/3rd/libev/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:/github/fish/lib/3rd/libev/CMakeLists.txt;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeRCInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckIncludeFile.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckLibraryExists.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckSymbolExists.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindPackageMessage.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindThreads.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;E:\github\fish\lib\3rd\libev\CMakeLists.txt;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeCCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeSystem.cmake;E:\github\fish\lib\3rd\libev\internal_utils.cmake;E:\github\fish\lib\3rd\libev\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">E:\github\fish\lib\3rd\libev\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule E:/github/fish/lib/3rd/libev/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
E:\github\cmake-3.13.2-win64-x64\bin\cmake.exe -SE:/github/fish/lib/3rd/libev -BE:/github/fish/lib/3rd/libev/build --check-stamp-file E:/github/fish/lib/3rd/libev/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:/github/fish/lib/3rd/libev/CMakeLists.txt;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeRCInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckIncludeFile.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckLibraryExists.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\CheckSymbolExists.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindPackageMessage.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\FindThreads.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\Windows.cmake;E:\github\cmake-3.13.2-win64-x64\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;E:\github\fish\lib\3rd\libev\CMakeLists.txt;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeCCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;E:\github\fish\lib\3rd\libev\build\CMakeFiles\3.13.2\CMakeSystem.cmake;E:\github\fish\lib\3rd\libev\internal_utils.cmake;E:\github\fish\lib\3rd\libev\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">E:\github\fish\lib\3rd\libev\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:\github\fish\lib\3rd\libev\build\ZERO_CHECK.vcxproj">
      <Project>{0829EDEA-03A6-3403-9E00-0F96B13F72E2}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="E:\github\fish\lib\3rd\libev\build\libev.vcxproj">
      <Project>{0CACD45C-C550-37C9-943A-AC3A0877D7A8}</Project>
      <Name>libev</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="E:\github\fish\lib\3rd\libev\build\libev_static.vcxproj">
      <Project>{9996EE69-3B33-3E8C-804D-856F9216DAF6}</Project>
      <Name>libev_static</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="E:\github\fish\lib\3rd\libev\build\libev_test.vcxproj">
      <Project>{52F2C18A-90D6-3A5E-87CC-1D8FC124CAE8}</Project>
      <Name>libev_test</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>